---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start Clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse
        state: restarted

    - name: Reload firewall
      ansible.posix.firewalld:
        state: enabled

  tasks:
    - name: Get Clickhouse distribution
      block:
        - name: Download Clickhouse packages
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get Clickhouse distribution fallback
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - name: Install Clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
      notify: Start Clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Ensure Clickhouse service is running
      ansible.builtin.service:
        name: clickhouse-server
        state: started

    - name: Wait for ClickHouse to be ready
      ansible.builtin.wait_for:
        port: 9000
        delay: 10
        timeout: 60
        state: started

    - name: Update ClickHouse config to listen on all interfaces
      ansible.builtin.lineinfile:
        path: /etc/clickhouse-server/config.xml
        regexp: '^\\s*<listen_host>.*</listen_host>'
        line: "    <listen_host>0.0.0.0</listen_host>"
        state: present
      notify: Restart Clickhouse service

    - name: Open TCP port 9000 in the firewall
      ansible.posix.firewalld:
        port: 9000/tcp
        permanent: true
        state: enabled
      register: firewall_cmd

    - name: Open TCP port 8123 in the firewall
      ansible.posix.firewalld:
        port: 8123/tcp
        permanent: true
        state: enabled
      register: firewall_cmd

    - name: Create database
      ansible.builtin.command: "clickhouse-client --host {{ clickhouse_host }} -q 'create database if not exists logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install and configure Vector
  hosts: clickhouse
  become: true
  vars:
    vector_install_dir: "/opt/vector"
    vector_config_template: "vector_config.j2"
    vector_arch: "x86_64"

  tasks:
    - name: Get the latest version of Vector
      # ansible.builtin.uri:
      #   url: "https://api.github.com/repos/vectordotdev/vector/releases/latest"
      #   return_content: true
      # register: vector_release

    - name: Set vector_version variable
      ansible.builtin.set_fact:
        # v_version: "{{ vector_release.json.tag_name | replace('v', '') }}"
        v_version: "{{ vector_release }}"

    - name: Download Vector distribution
      ansible.builtin.get_url:
        url: "https://github.com/vectordotdev/vector/releases/download/v{{ v_version }}/vector-{{ v_version }}-{{ vector_arch }}-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector-{{ v_version }}-{{ vector_arch }}.tar.gz"
        mode: "0644"

    - name: Create directory for Vector installation
      ansible.builtin.file:
        path: "{{ vector_install_dir }}"
        state: directory
        mode: "0755"

    - name: Extract Vector distribution
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ v_version }}-{{ vector_arch }}.tar.gz"
        dest: "{{ vector_install_dir }}"
        remote_src: true

    - name: Check contents of Vector installation directory
      ansible.builtin.command: ls -l {{ vector_install_dir }}
      register: vector_dir_contents
      changed_when: false
